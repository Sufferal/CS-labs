from md6 import md6hash
from tests import *

# Generate two large primes RandomPrime[{2^1536,2^2000}]
p = 113698731966190906520722982079118023250669773459330411591774034726077825039884465616148522111017676597671265260272820386978586086586217777917061262521612641944625824562502729666882948420456846046000471647275863447748995276497888245528839252459711438698359010064362284629907830692464882985610005479697254132776448614832363495019799157901742270527774724912651647639461155828990156719016607944051281130393846063904457848993194596915988516529970834286527443839886045081383543822776695733306955868606445385997294786004229831926206352560892619842250498670627781726439254088932653709535870932263784408434343513
q = 16474443805139097793667155199725895247966179311949505966429234577503056863502845975485995213982472771421986100999520256573835196370078629426434962880980877679985064459741596533480112432321342665263780193650302403587674049680519680278138839839802987167755013862131928866839580435833303813808874857037158624775117305724214989498302267298482953247233743208430199292243221924641505158615078741516213855062588935780736619354130493799146523617348635580701324134730975322719184690176110368454620268095174188883842401909508586710931299571546837858332735414617295662885037410370651438246008936408108890832112947

n = p * q                 
phi = (p - 1) * (q - 1) 
e = 65537                
d = pow(e, -1, phi)     

def encrypt(message, e, n):
  return pow(message, e, n)

def decrypt(cipher_text, d, n):
  return pow(cipher_text, d, n)

def rsa_main():
  md6 = md6hash()
  hash_size = 512 # Bits

  initial_msg = get_current_message()
  initial_hash = md6.hex(initial_msg, hash_size)
  print("md6 hash initial: ", initial_hash)

  cipher_text = encrypt(int(initial_hash, 16), e, n)
  plain_text = decrypt(cipher_text, d, n)

  # Test tampering
  # add_spaces("message.txt", 2)
  # remove_lines("message.txt", 2)
  # clear_file("message.txt")
  
  current_msg = get_current_message()
  current_hash = md6.hex(current_msg, hash_size)
  print("md6 hash current: ", current_hash)
  if plain_text == int(current_hash, 16):
    print("[Status] Signature is valid. Message is not tampered with.")
  else:
    print("[Status] Signature is invalid. Message is tampered with.")
        
if __name__ == "__main__":
  rsa_main()
